<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimpleBankAPI</name>
    </assembly>
    <members>
        <member name="T:SimpleBankAPI.Contracts.CreateAccountRequest">
            <summary>
            CreateAccountRequest - obj. with needed details for a new Account.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateAccountRequest.Amount">
            <summary>
            The Amount of money the Account starts with. 
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateAccountRequest.Currency">
            <summary>
            The Currency of the money in the Account.
            </summary>
        </member>
        <member name="T:SimpleBankAPI.Contracts.CreateUserRequest">
            <summary>
            CreateUserRequest - obj. with needed details for a new User.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateUserRequest.Email">
            <summary>
            Email adress.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateUserRequest.Fullname">
            <summary>
            User full name.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateUserRequest.Password">
            <summary>
            User new password.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.CreateUserRequest.Username">
            <summary>
            Choose a Username.
            </summary>
        </member>
        <member name="T:SimpleBankAPI.Contracts.LoginUserRequest">
            <summary>
            LoginUserRequest - Username and Password to authenthicate.
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.LoginUserRequest.Password">
            <summary>
            Your personal password. 
            </summary>
        </member>
        <member name="P:SimpleBankAPI.Contracts.LoginUserRequest.Username">
            <summary>
            Your username.
            </summary>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.AccountsController.GetAllAccounts">
            <summary>
            Get all logged user Accounts.
            </summary>
            <returns>All logged user Accounts</returns>
            <response code="200">Ok - Returns all Accounts of logged user.</response>
            <response code="204">NoContent - Logged user has no Accounts.</response>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.AccountsController.GetAccount(System.Int32)">
            <summary>
            Get Account with all its Movims of logged user.
            </summary>
            <param name="accountId">Account Id belonging to user.</param>
            <returns>Account with all its Movims of logged user.</returns>
            <response code="200">Ok - Returns requested Account.</response>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.AccountsController.CreateAccount(SimpleBankAPI.Contracts.CreateAccountRequest)">
            <summary>
            Create account for logged user.
            </summary>
            <param name="accountRequest">Desired Amount and Currency to create a new Account.</param>
            <returns>Created account.</returns>
            <response code="201">Returns the newly created Account.</response>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.TransfersController.MakeTransfer(SimpleBankAPI.Contracts.TransferRequest)">
            <summary>
            Make a transfer between two accounts.
            </summary>
            <param name="transferRequest">Transfer Request obj.</param>
            <returns>A TranferResponse obj. with transfer details.</returns>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.UsersController.Create(SimpleBankAPI.Contracts.CreateUserRequest)">
            <summary>
            Create a new user.
            </summary>
            <param name="createUserRequest">All new user details.</param>
            <returns>The newly created user.</returns>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.UsersController.Login(SimpleBankAPI.Contracts.LoginUserRequest)">
            <summary>
            Login to be granted access to the API.
            </summary>
            <param name="loginUserRequest">User's param to Login</param>
            <returns>A Token</returns>
        </member>
        <member name="M:SimpleBankAPI.Controllers.v1.UsersController.Logout(SimpleBankAPI.Contracts.LogoutUserRequest)">
            <summary>
            Logout.
            </summary>
            <param name="logoutUserRequest">Request to logout.</param>
            <returns>A response.</returns>
        </member>
        <member name="M:SimpleBankAPI.Repository.BaseRepository`1.ChangeEntityState(`0,System.Int32)">
            <summary>
            Changes the state of the entity that is being tracked by a context.<para />
            'state': Detached = 0 | Unchanged = 1 | Deleted = 2 | Modified = 3 | Added = 4 .<para />
            Set to default 3 : Modified.
            </summary>
            <param name="entity"><see cref="!:TEntity"/> object to change state.</param>
            <param name="state">The state to change to. </param>
        </member>
        <member name="M:SimpleBankAPI.Repository.BaseRepository`1.RevertAllEntitiesState(System.Linq.IQueryable{`0})">
            <summary>
            Revert entities to Unchanged. Works with ALL types of model entities.
            </summary>
            <param name="entities">Entities to revert to Unchanged.</param>
        </member>
        <member name="M:SimpleBankAPI.Repository.BaseRepository`1.RevertAllEntitiesState(System.Collections.Generic.List{`0})">
            <summary>
            Revert entities to Unchanged. Works with ALL types of model entities.
            </summary>
            <param name="entities">Entities to revert to Unchanged.</param>
        </member>
        <member name="M:SimpleBankAPI.Repository.IBaseRepository`1.ChangeEntityState(`0,System.Int32)">
            <summary>
            Changes the state of the entity that is being tracked by a context.<para />
            'state': Detached = 0 | Unchanged = 1 | Deleted = 2 | Modified = 3 | Added = 4 .<para />
            Set to default 3 : Modified.
            </summary>
            <param name="entity"><see cref="!:TEntity"/> object to change state.</param>
            <param name="state">The state to change to. </param>
        </member>
        <member name="M:SimpleBankAPI.Repository.IBaseRepository`1.RevertAllEntitiesState(System.Linq.IQueryable{`0})">
            <summary>
            Revert entities to Unchanged. Works with ALL types of model entities.
            </summary>
            <param name="entities">Entities to revert to Unchanged.</param>
        </member>
        <member name="M:SimpleBankAPI.Repository.IBaseRepository`1.RevertAllEntitiesState(System.Collections.Generic.List{`0})">
            <summary>
            Revert entities to Unchanged. Works with ALL types of model entities.
            </summary>
            <param name="entities">Entities to revert to Unchanged.</param>
        </member>
    </members>
</doc>
