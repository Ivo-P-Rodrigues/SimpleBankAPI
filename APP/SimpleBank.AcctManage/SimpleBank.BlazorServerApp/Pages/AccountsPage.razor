@page "/accountspage"
@using SimpleBank.BlazorServerApp.Data.Requests
@using SimpleBank.BlazorServerApp.Data.Responses
@using SimpleBank.BlazorServerApp.Services

@inject IAccountService accountService

<PageTitle>Accounts Page</PageTitle>

<h3>Accounts Page</h3>

<EditForm Model="@createAccountRequest" OnSubmit="CallAPIToCreateAccount">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>
            Amount:
            <InputNumber @bind-Value="createAccountRequest.Amount" />
        </label>
    </p>
    <p>
        <label>
            Currency:
            <InputText @bind-Value="createAccountRequest.Currency" />
        </label>
    </p>
    <p>
        <label>
            Token:
            <InputText @bind-Value="accessToken" />
        </label>
    </p>
    <button type="submit">TEST ME</button>

</EditForm>
<br />

<p>AccountRequest: @createAccountRequest</p>
<p>AccountResponse: @accountResponse</p>
<p>AccessToken: @accessToken</p>

<button class="btn btn-primary" @onclick="CallAPIToCreateAccount">Click me</button>

<br /><br /><br />



@code {

    private CreateAccountRequest createAccountRequest = new(); //start empty
    private AccountResponse? accountResponse;
    private string? accessToken = String.Empty;


    private async Task CallAPIToCreateAccount()
    {
        accountResponse = await accountService.CreateAccount(createAccountRequest, accessToken);
    }

}



@*
        Account request
        public decimal Amount { get; set; }
        public string Currency { get; set; }

        Account response
        public Guid AccountId { get; set; }
        public Guid UserId { get; set; }
        public decimal Balance { get; set; }
        public DateTime CreatedAt { get; set; }
        public string Currency { get; set; }

*@
