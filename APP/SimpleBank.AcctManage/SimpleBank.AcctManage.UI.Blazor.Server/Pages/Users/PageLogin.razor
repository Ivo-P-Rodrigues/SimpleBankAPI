@page "/login"
@using SimpleBank.AcctManage.UI.Blazor.Server.Services
@using SimpleBank.AcctManage.UI.Blazor.Server.Services.Requests
@inject AuthService authService

<div class="container-md rounded monoBox dropshadow">

    <h4>Login</h4>

    <EditForm Model="@loginUserRequest" OnSubmit="CallAPIToLogin">
        <DataAnnotationsValidator />

        <div class="form-group">
            @*<label for="inputUsername1">@Loc["Username"]</label>*@
            <InputText class="form-control" id="inputUsername1" aria-describedby="usernameHelp" placeholder="Username" @bind-Value="loginUserRequest.Username" />
            <ValidationMessage For="@(() => loginUserRequest.Username)"></ValidationMessage>
            @*<small id="usernameHelp" class="form-text text-muted">Insert your username.</small>*@
        </div>

        <div class="form-group">
            @*<label for="inputPassword1">@Loc["Password"]</label>*@
            <InputText type="password" class="form-control" id="inputPassword1" placeholder="Password" @bind-Value="loginUserRequest.Password" />
            <ValidationMessage For="@(() => loginUserRequest.Password)"></ValidationMessage>
        </div>

        <button type="submit" class="btn btn-dark">Login</button>
        <button class="btn-sm btn-outline-dark float-right" @onclick="@AutoFill">AutoFill</button>
    </EditForm>

    @if (errorOnLogin == true)
    { <hr /> <br />  <p style="color:red">LoginError </p> }
    @if (errorOnLogin == false)
    {
        <hr /> <br />  <p style="color:red">LoginSuccessfull </p>
    }

    
</div>


@code {
    private bool? errorOnLogin;
    private LoginUserRequest loginUserRequest = new();

    private async Task CallAPIToLogin()
    {
        errorOnLogin = await authService.Login(loginUserRequest);
    }

    private void AutoFill()
    {
        loginUserRequest.Username = "Dummytester2";
        loginUserRequest.Password = "123456789";
    }

}
