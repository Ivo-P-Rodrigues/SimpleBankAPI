@using SimpleBank.AcctManage.UI.Blazor.Server.Services
@using SimpleBank.AcctManage.UI.Blazor.Server.Services.Requests
@using SimpleBank.AcctManage.UI.Blazor.Server.Services.Responses

@inject UserService userService

<div class="container-md mx-auto rounded dualBox dropshadow">

    <h4>NewUser</h4>

    <EditForm Model="@createUserRequest" OnSubmit="CallAPIToCreateUser">
        <DataAnnotationsValidator />

        <div class="form-group">
            @*<label for="inputFullname1">@Loc["Fullname"]</label>*@
            <InputText class="form-control" id="inputFullname1" placeholder="Fullname" @bind-Value="createUserRequest.Fullname" />
            <ValidationMessage For="@(() => createUserRequest.Fullname)"></ValidationMessage>
        </div>
        <div class="form-group">
            @*<label for="inputEmail1">@Loc["Email"]</label>*@
            <InputText type="email" class="form-control" id="inputEmail1" placeholder="Email" @bind-Value="createUserRequest.Email" />
            <ValidationMessage For="@(() => createUserRequest.Email)"></ValidationMessage>
        </div>
        <div class="form-group">
            @*<label for="inputUsername1">@Loc["Username"]</label>*@
            <InputText class="form-control" id="inputUsername1" placeholder="Username" @bind-Value="createUserRequest.Username" />
            <ValidationMessage For="@(() => createUserRequest.Username)"></ValidationMessage>
        </div>
        <div class="form-group">
            @*<label for="inputPassword1">@Loc["Password"]</label>*@
            <InputText type="password" class="form-control" id="inputPassword1" placeholder="Password" @bind-Value="createUserRequest.Password" />
            <ValidationMessage For="@(() => createUserRequest.Password)"></ValidationMessage>
        </div>

        <button type="submit" class="btn btn-dark">Create</button>
    </EditForm>

    @if (userCreated)
    {
        <hr /><br />
        <p>msgSuccess</p>
    }

</div>

@code {

    //CREATE
    private CreateUserRequest createUserRequest = new();
    private bool userCreated = false;

    private async Task CallAPIToCreateUser() =>
        userCreated = await userService.Create(createUserRequest);




}

