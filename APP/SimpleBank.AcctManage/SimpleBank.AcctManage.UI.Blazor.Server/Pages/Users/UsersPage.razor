@page "/userspage"
@using SimpleBank.AcctManage.UI.Blazor.Server.Pages.Users.Components
@using SimpleBank.AcctManage.UI.Blazor.Server.Services
@using SimpleBank.AcctManage.UI.Blazor.Server.Services.Responses

@inject UserService userService

<PageTitle>User</PageTitle>

<h2>User</h2>
<hr />

@if (renderAwait)
{
    <Loading></Loading>
}
else
{
    @if (createUserResponse is null)
    {
        <div class="d-flex flex-wrap justify-content-center">
            <div class="px-2">
                <CreateUser></CreateUser>
            </div>
            <div class="px-2"></div>
            <div class="px-2 sm-media_margin-top">
                <LoginUser OnUserLogginIn="@OnUserLogginIn"></LoginUser>
            </div>
        </div>
    }
    else
    {
        <ProfileUser CreateUserResponse="@createUserResponse"></ProfileUser>
        <LogoutUser OnUserLogginOut="@OnUserLogginOut"></LogoutUser>
    }
}
<br /><br />



@code {
    private bool renderAwait = true;
    private CreateUserResponse? createUserResponse;


    protected override async Task OnInitializedAsync()
    {
        createUserResponse = await userService.GetUser();
        renderAwait = false;
    }



    public async void OnUserLogginIn(bool logged)
    {
        createUserResponse = await userService.GetUser();
        StateHasChanged();
    }

    public void OnUserLogginOut(bool logged) =>
        createUserResponse = null;





}

